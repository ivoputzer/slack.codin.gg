name: Deploy
on:
  push:
    branches: [master]
jobs:
  clean:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: c-hive/gha-remove-artifacts@master # master for NodeJs v16
      with:
        age: '0 minutes'
        skip-recent: 2 # keep 2 previous versions for n-1 rollback
  build:
    runs-on: ubuntu-latest
    needs: artifacts
    steps:
    - uses: actions/checkout@master
      with:
        ref: refs/heads/master
    - run: docker build --tag ${{ github.event.repository.name }} ${{ github.workspace }}
    - run: docker save -o ${{ github.sha }}.tar ${{ github.event.repository.name }}
    - uses: actions/upload-artifact@v2
      with:
        name: docker@${{ github.sha }}
        path: ${{ github.sha }}.tar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: refs/heads/master
    - uses: actions/download-artifact@v2
      with:
        name: docker@${{ github.sha }}
    - env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.ansible_ssh_key }}"
    - env:
        ANSIBLE_HOST_KEY_CHECKING: False
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ansible-galaxy collection install community.general
        ansible-playbook --extra-vars="github_sha=${{ github.sha }} github_repository_name=${{ github.event.repository.name }} slack_token=${{ secrets.slack_token }} slack_secret=${{ secrets.slack_secret }} openai_secret=${{ secrets.openai_secret }}" --user=${{ secrets.ansible_user }} --inventory ${{ github.event.repository.name }}, deploy.yml
